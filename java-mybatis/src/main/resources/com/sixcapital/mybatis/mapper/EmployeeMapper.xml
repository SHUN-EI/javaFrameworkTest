<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace=绑定一个对应的Dao/Mapper接口-->
<mapper namespace="com.sixcapital.mybatis.mapper.EmployeeMapper">

    <!--select查询语句-->
    <select id="getEmployeelist" resultType="Employee">
       select * from employee;
   </select>

    <select id="getEmployeeByEmpno" parameterType="int" resultType="Employee">
        select *  from employee where empno =#{empno};
    </select>

    <insert id="addEmployee" parameterType="Employee">
        insert  into employee values (#{empno},#{ename},#{job},#{mgr},#{hiredate},#{sal},#{deptnu});
    </insert>

    <update id="updateEmployee" parameterType="Employee">
        update employee set ename =#{ename}, job=#{job}  where empno=#{empno};
    </update>

    <delete id="deleteEmployee" parameterType="int">
        delete from employee where empno=#{empno};
    </delete>

    <!--对象中的属性，可以直接取出来    传递map的key-->
    <update id="updateEmployee2" parameterType="map">
        update employee set  ename=#{name},job=#{job} where empno=#{id};
    </update>


    <!--
        SQL注入：？替换成其他sql语句
        select *  from  employee where empno=? ;
        select *  from  employee where empno=1 or 1=1 ;
    -->
    <select id="getEmployeeLike" resultType="Employee">
        select *  from employee where ename like #{name};
    </select>

    <select id="getEmployeeByLimit" parameterType="map" resultType="Employee">
        select *  from employee limit #{startIndex},#{pageSize};
    </select>

    <select id="getEmployeeByRowBounds" resultType="Employee">
        select *  from employee;
    </select>

    <!-- 子查询,查出员工里面的部门详细信息
        1.查询所有员工的信息
        2.根据查询出来的员工的deptnu，去查出对应的部门信息-->
    <select id="getEmployeeDetail" resultMap="EmployeeDept">
        select * from employee;
    </select>

    <resultMap id="EmployeeDept" type="Employee">
        <result property="empno" column="empno"/>
        <result property="ename" column="ename"/>
        <result property="job" column="job"/>
        <result property="mgr" column="mgr"/>
        <result property="hiredate" column="hiredate"/>
        <result property="sal" column="sal"/>
        <result property="deptnu" column="deptnu"/>
        <!--复杂的属性，我们需要单独处理 对象： association 集合： collection -->
        <association property="department" column="deptnu" javaType="Department" select="getDepartment"/>
    </resultMap>

    <select id="getDepartment" resultType="Department">
        select * from dept where deptnu =#{deptnu};
    </select>

    <!--  连接查询 按照结果嵌套处理 -->
    <select id="getEmployeeDetailWithJoin" resultMap="EmployeeDept2">
        select  * from employee e inner  join dept d on d.deptnu=e.deptnu;
    </select>

    <resultMap id="EmployeeDept2" type="Employee">
        <result property="empno" column="empno"/>
        <result property="ename" column="ename"/>
        <result property="job" column="job"/>
        <result property="mgr" column="mgr"/>
        <result property="hiredate" column="hiredate"/>
        <result property="sal" column="sal"/>
        <result property="deptnu" column="deptnu"/>
        <association property="department" javaType="Department">
            <result property="deptnu" column="deptnu"/>
            <result property="dname" column="dname"/>
            <result property="addr" column="addr"/>
        </association>
    </resultMap>

</mapper>